extends base

- load widget_tweaks
- load brabeion_tags

block header
  - with headerMessage=task.name
    include includes/header

block content
  .container-fluid
    div(style="background:#E2FFD8;min-height:40px").row

      div(style="padding-top:6px").col-xs-4
        ul.pagination
          - for doc in documents
            li(data-doc="{{doc.pk}}")
              a(href="#") #{doc.pk}

      div(style="padding-top:2px;").col-xs-2.col-xs-offset-1
        div(id="quest-submit").button.btn.btn-default.btn-block.done Submit


  #insert


block post-footer
  <script id="word-template" type="text/template"><% if(neighbor) { %><%= text %><% } else { %><%= text %> <% } %></script>

  - for doc, doc_i in documents
    script.
      $.ajax({
        url:'/document/{{doc.pk}}/',
        type: 'GET',
        dataType: 'html',
        success: function(data) {
          $('#insert').append(data);
          if(#{doc_i} == 0) {
            $('#doc_{{doc.pk}}').fadeIn();
          }
        }
      });

  script.
    $('.pagination li').on('click', function(evt) {
      $('#insert .container.document').hide();
      var doc_id = $(this).data('doc');
      $('#doc_'+doc_id).fadeIn();
    });


    $('#quest-submit').on('click', function(evt) {
      var $document = $("#insert .container.document:visible");
      var document_id = $document.data('doc');
      var $document_form = $document.find('form');
      var sections = $document.find('.paragraph.entity_tag').map(function(k,v) { return +$(v).attr('id'); });

      $(this).attr('disabled', 'disabled');
      /* Submit the annotations to the server, then tell the server
      you're done with that document. */

      /* We prevent this or else Django gives broken pipe b/c we need to
      wait for the ajax submissions to close before reloading the page */
      evt.preventDefault();
      var counter = 0,
          ann_counter = 0;

      /* Iterate over each of the paragraphs or annotatable sections on the page */
      _.each(sections, function(section_id) {
        var annotations = YPet[section_id].currentView.collection.parentDocument.get('annotations').toJSON(),
            url = '/document/'+ document_id +'/section/'+ section_id +'/annotation/create/';
        ann_counter += annotations.length;

        /* Iterate over each of the annotations within that section */
        _.each(annotations, function(annotation) {
          $.ajax({
            type: 'POST',
            url: url,
            data: $.extend({'csrfmiddlewaretoken': '{{ csrf_token }}'}, annotation),
            cache: false,
            async: false,
            success: function() { counter++; },
          });
        });
      });

      /* If they all got sent to the server, let's move on */
      if(counter === ann_counter) {
        var form = $document_form,
            data = {},
            input;

        $.each( form.find('input, textarea, select'), function() {
          input = $(this);
          data[ input.attr('name') ] = input.val();
          input.val('')
        });

        $.ajax({
          type: 'POST',
          url: form.attr('action'),
          dataType: 'html',
          data: data,
          cache: false,
          async: false,
          success: function(data) {
            $document.html(data);
            $pag_tab = $('.pagination li[data-doc='+document_id+']');
            $pag_tab.addClass('disabled');
            $pag_tab.next().addClass('active').trigger('click');
          }
        });

        $(this).attr('disabled', false);
     } else {
        alert('There was a problem submissing this document. Please try another.');
      }

    });
