<script id="alert-template" type="text/template">
<div class="alert alert-warning" role="alert">
<div class="row"><div class="col-xs-10 col-xs-offset-1 text-center"><p class='lead'>Sorry! <strong><%= text %></strong> doesn't appear to be correct.</p></div></div>
<div class="row"><div class="col-xs-10 col-xs-offset-1 text-center"><%= help_message %></div></div>
</div>
</script>

script.
  var validate = function(needle, gold) {
    var all_match = true;
    _.each(gold, function(gold_item) {
      var matches = _.filter(needle.toJSON(), function(obj) {
        return obj.start == gold_item.start && obj.text == gold_item.text }).length;
      if(!matches) { all_match = false; }
    });

    return all_match;
  };

  $('#next-container').popover({
    trigger: "hover",
    title: "Keep Going!",
    content: "Please complete the task before moving forward.",
    placement: "top",
    container: "body"
  });

  $('#quest-alerts').affix({
    offset: {
      top: function() { return $('#quest').position().top-60 },
      bottom: function () {
        return (this.bottom = $('.footer').outerHeight(true))
      }
    },
  });

  YPet.addInitializer(function(options) {
    var p = new Paragraph({'text': $('p.paragraph').text().trim()});
    YPet.AnnotationTypes = new AnnotationTypeList([{name: 'Disease', color: '#00ccff'}]);
    YPet.addRegions({'quest': '#quest'});
    YPet['quest'].show(new WordCollectionView({collection: p.get('words')}));
  });
  YPet.start();

  var correct = function() {
    $('#partner').slideDown();
    $('#next-container').popover('disable');
    $('#next').attr('disabled', false);
    window.scrollTo(0,document.body.scrollHeight);
  };

  YPet['quest'].currentView.collection.parentDocument.get('annotations').on('add', function(model, collection) {
    var model_json = model.toJSON();
    /*
     * Check if the array doesn't contain the selected word.
     * 1) Alert if (contains/overlap/miss)error 2) Unselect
     */
    if( !_.filter(answers, function(obj) { return model_json.start == obj.start && model_json.text == obj.text; }).length ) {
      model_json['help_message'] = '';
      /*
      * Overlaps (start or before) check
      */
      if( _.filter(answers, function(answer) {
        return  model_json.start < answer.start &&
                _.str.include(model_json.text, answer.text); }).length ) {
        model_json.help_message = "<p>(Please check that your selection <strong>only</strong> includes required terms)</p>";
      }

      if( _.filter(answers, function(answer) {
        return  model_json.start >= answer.start &&
                model_json.start+model_json.text.length > answer.start+answer.text.length &&
                _.str.include(model_json.text, answer.text); }).length ) {
        model_json.help_message = "<p>(Please check that your selection <strong>only</strong> includes required terms)</p>";
      }

      /*
      * Contains check
      */
      if( _.filter(answers, function(answer) {
        return  model_json.start >= answer.start &&
                model_json.start+model_json.text.length <= answer.start+answer.text.length &&
                _.str.include(answer.text, model_json.text); }).length ) {
        model_json.help_message = "(Please check that your selection contains <strong>all</strong> required words)";
      }

      var temp = _.template($('#alert-template').html());
      $('#quest-alerts').fadeOut('fast', function() {
        $(this).html(temp(model_json));
        $(this).fadeIn('fast');
      });

      model.destroy()
    } else {
     $('#quest-alerts').fadeOut('fast');
     validation_check(collection);
    };
  });
  YPet['quest'].currentView.collection.parentDocument.get('annotations').on('remove', function(model, collection) { validation_check(collection); });
