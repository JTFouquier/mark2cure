extends base

block header
  - with headerMessage='Training #1: Acquire Disease Marking Skill'
    include includes/header-anon


block content
  .container
    .row
      .col-md-12
        h2 Sometimes the disease terms are abbreviated. Mark all instances of disease abbreviations.
        h3.lead Mark all disease terms in the sentence below.

    #partner(style='display: none;').row.head-space
      .col-md-10.col-md-offset-1
        p You were paired with Doc_G-man <small>Level: Gold Master Marker</small>


    .row.head-space-xl
      #quest.col-md-10.col-md-offset-1.paragraph.entity_tag
        p We will discuss the effect of different insulin regimen on type 2 diabetes mellitus patients (ie- T2DM patients) ...

    .row.head-space-xl
      .col-md-10.col-md-offset-1
        .progress
          div(role='progressbar', aria-valuenow='50', aria-valuemin='0', aria-valuemax='100', style='width: 50%;').progress-bar.progress-bar-striped.active
            .sr-only 50% Complete

    .row.head-space
      a(href='/training/intro/1/step/7/', id='next', disabled).btn.btn-default.pull-right Next


block post-footer
    <script id="word-template" type="text/template"><% if(neighbor) { %><%= text %><% } else { %><%= text %> <% } %></script>
    script.
      YPet.addInitializer(function(options) {
        // Create our regions
        YPet.addRegions({quest: '#quest'});
        // Add our views for each section
        var p = new Paragraph({'text': $('#quest').text().trim()});
        p.parseText();
        var view = new WordCollectionView({collection: p.get('words')});
        YPet['quest'].show( view );
      });
      YPet.start();

      var correct = function() {
        $('#partner').slideDown(function() {
          diabetes_intro.start();
        });
        $('#next').attr('disabled', false);
      }

      var answers = ['type 2 diabetes mellitus', 'T2DM']
      YPet['quest'].currentView.collection.parentDocument.get('annotations').on('add', function(model, collection) { if(collection.pluck('text').sort().join(',') == answers.sort().join(',')) { correct(); } });
      YPet['quest'].currentView.collection.parentDocument.get('annotations').on('remove', function(model, collection) { if(collection.pluck('text').sort().join(',') == answers.sort().join(',')) { correct(); } });

