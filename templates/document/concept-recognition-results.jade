extends base

- load humanize

block content

    .row
      .col-md-5
        .panel.panel-default
          .panel-heading.text-center
            | You missed

          table.table.table-striped.table-hover
            thead
              - if results.false_negatives.count == 0
                  tr
                    td.text-center.text-muted.no-annotations
                      | None
              - else
                  tr
                    th
                      | Section
                    th
                      | Text
                    th
                      | Position

            tbody
              - for ann in results.false_negatives
                  tr(data-section="{{ ann.view.section.pk }}", data-text="{{ ann.text }}", data-start="{{ ann.start }}").annotation-finder
                    td
                      | #{ ann.view.section.get_kind_display }
                    td
                      | #{ ann.text }
                    td
                      | #{ ann.start }


      .col-md-5
        .panel.panel-default
          .panel-heading.text-center
            | You wrongly marked

          table.table.table-striped.table-hover
            thead
              - if results.false_positives.count == 0
                  tr
                    td.text-center.text-muted.no-annotations
                      | None
              - else
                  tr
                    th
                      | Section
                    th
                      | Text
                    th
                      | Position

            tbody
              - for ann in results.false_positives
                  tr(data-section="{{ ann.view.section.pk }}", data-text="{{ ann.text }}", data-start="{{ ann.start }}").annotation-finder
                    td
                      | #{ ann.view.section.get_kind_display }
                    td
                      | #{ ann.text }
                    td
                      | #{ ann.start }


      .col-md-2
        .panel.panel-default
          .panel-heading.text-center
            | Score
          .panel-body
            h2.text-center.f-score
              | {% widthratio results.score.2 1 100 %}


    - for section in sections
        .row
          .col-md-10.col-md-offset-1
            h4
              | #{ section.get_kind_display } 
              small
                a(data-toggle="modal", data-target="#refute-{{ section.pk }}", href="#")
                  | [Refute]
          include includes/refute

          .col-md-10.col-md-offset-1.head-space.game
            div(id="{{ section.pk }}").paragraph.results
              p
                - for indexes, text, counter, user_annotated in section.words
                  span(data-counter="{{ counter }}", data-starti="{{ indexes.0 }}", data-stopi="{{ indexes.1 }}", class="#{ 'user_annotated' if user_annotated else '' }")
                    | #{ text } 


    .row
      .col-md-3.col-md-offset-1
        table.table
          tbody
            tr
              td
                div(style="height: 16px; width: 16px; background-color: yellow")
              td
                | Correct annotations

            tr
              td
                div(style="height: 16px; width: 16px; background-color: #0cf")
              td
                | Your annotations

            // tr
              td
                div(style="height: 16px; width: 16px; background-color: #80E680")
              td
                | Correct annotations

      - if debug
        .col-md-4
          .panel.panel-default
            .panel-heading.text-center
              | Your Submissions

            table.table.table-striped
              thead
                tr
                  th
                    | Section
                  th
                    | Text
                  th
                    | Position

              tbody
                - for section in sections
                  - for ann in section.user_annotations
                    tr
                      td
                        | #{ section.get_kind_display }
                      td
                        | #{ ann.text }
                      td
                        | #{ ann.start }

        .col-md-4
          .panel.panel-default
            .panel-heading.text-center
              | Answer Key

            table.table.table-striped
              thead
                tr
                  th
                    | Section
                  th
                    | Text
                  th
                    | Position

              tbody
                - for section in sections
                  - for ann in section.annotations
                    tr
                      td
                        | #{ section.get_kind_display }
                      td
                        | #{ ann.text }
                      td
                        | #{ ann.start }


    include document/controls-results

block post-footer
    - if user.userprofile.mturk
      script.
        $("#document_submit").submit(function(evt) {
          evt.preventDefault();
          evt.stopPropagation();

          // If the document was completed forget the rest and submit the mturk ajax request to move the turker
          $('#worker_submit').submit();
        });


    script.
        var $sections = $('div.paragraph p')

        var score_color = d3.scale.linear()
                            .domain([0, 1])
                            .range(["red", "#80E680"]);
        $('.f-score').css({ 'color': score_color( #{results.score.2} ) });

        $.each($sections, function() {
          var section = $(this);
          var $words = section.find('span')

          var values = _.map($words, function(w) { return $(w).data('counter'); }),
              max = _.max(values);

          var color = d3.scale.linear()
              .domain([0, max])
              .range(["white", "yellow"]);

          var user_tracker = true,
              gold_tracker = true;

          $.each($words, function(w) {
            var word = $(this),
                next_word = word.next(),
                value = word.data('counter'),
                next_word_value = next_word.data('counter');


            if(value > 0) { word.addClass('golden'); }

            if( next_word.hasClass('user_annotated') ) { user_tracker = true; } else {
              if(user_tracker) {
                word.html( word.html().trim() );
                word.addClass('neighbor');
              }
              user_tracker = false;
            }

            if( next_word_value > 0 ) { gold_tracker = true; } else {
              if(gold_tracker) {
                word.html( word.html().trim() );
                word.addClass('neighbor');
              }
              gold_tracker = false;
            }

            // word.css({'background-color': color(value)});
            // if( word.hasClass('user_annotated') ) {
            //   var c = d3.scale.linear()
            //             .domain([0, 1])
            //             .range([color(value), "#0cf"]);
            //   if( value > 0 ) {
            //     word.css({'background-color': c(.5)});
            //   } else {
            //     word.css({'background-color': c(1)});
            //   }
            // }

          });
        });


