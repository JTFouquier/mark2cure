extends base

- load humanize

block content
    - for sec in doc.section_set.all
        .row
          - if user.is_authenticated and user.profile.mturk == False
              .col-md-10.col-md-offset-1
                h4
                  | #{ sec.get_kind_display }

          .col-md-10.col-md-offset-1.head-space.game
            div(id="{{ sec.pk }}").paragraph.entity_tag
              p
                | #{ sec.text }

    - if False
      // complete and !mturk
      .well.col-md-10
        p
          | Congratulations, you completed the document!

      .col-md-1
        button.btn.btn-success.btn-large.navigate
          | Next

    - else
      .well.col-md-10.col-md-offset-1.head-space
        .row
          - if user.is_authenticated and user.profile.mturk == False
            p
              span.label.label-info Title
              |  #{ doc.title }
            p
              span.label.label-info Created
              |  #{ doc.created|naturaltime }

          form(method="post")
            {% csrf_token %}
            button.btn.btn-primary.btn-large.done
              | Done


    form(action="{{ turk_sub_location }}/mturk/externalSubmit", method="POST", style="display:none", id="worker_submit_form")
      input(type="hidden", name="assignmentId", value="{{ assignmentId }}")
      input(type="text", name="document_id", value="{{ doc.pk }}")


block post-footer

    <script id="word-template" type="text/template"><% if(neighbor) { %><%= text %><% } else { %><%= text %> <% } %></script>
    - if completed
      script.
        // If the document was completed forget the rest and submit the mturk ajax request to move the turker
        $('#worker_submit_form').submit();

    - else
      script.
        var sections = {};
        var section_selectors = {};
        YPet.addInitializer(function(options) {

          $( ".game .paragraph" ).each(function( index ) {
            var section_id = $(this).attr('id'),
                section_text = $(this).text().trim();

            sections[ section_id ] = section_text;
            section_selectors[ section_id ] = '#'+section_id;
          });

          // Create our regions
          YPet.addRegions(section_selectors);

          // Add our views for each section
          _.each( _.keys(sections), function(key) {
            var p = new Paragraph({'text': sections[key] })
            p.parseText();
            var view = new WordCollectionView({collection: p.get('words')});
            YPet[key].show( view );
          });

        });

        YPet.start();

        $('button.done').click(function() {
          //-- Submit the annotations
          _.each( _.keys(sections), function(key) {
            var ann_post_body = YPet[key].currentView.collection.parentDocument.get('annotations').toJSON(),
                url = '/document/{{ doc.pk }}/section/'+ key +'/annotation/create/';

            _.each(ann_post_body, function(annotation) {
              $.post(url, $.extend({'csrfmiddlewaretoken': '{{ csrf_token }}'}, annotation));
            });
          });
        });
