extends base

- load humanize

block content

    - for section in sections
        .row
          .col-sm-10.col-sm-offset-1
            h4
              | #{ section.get_kind_display }

          .col-sm-10.col-sm-offset-1.head-space.game
            div(id="{{ section.pk }}").paragraph.results
              p
                - for indexes, text, counter, gm_pk, user_pk, user_annotated in section.words
                  span( data-counter="{{ counter }}",
                        data-starti="{{ indexes.0 }}",
                        data-stopi="{{ indexes.1 }}",
                        data-gmannid="{{ gm_pk }}",
                        data-uannid="{{ user_pk }}")
                    | #{ text } 


    .row
      .col-sm-3.col-sm-offset-1
        table.table
          tbody
            tr
              td
                div(style="height: 16px; width: 16px; background-color: #00CC00")
              td
                | Correct annotations

            tr
              td
                div(style="height: 16px; width: 16px; background-color: #0cf")
              td
                | Your annotations


    include document/controls-results

block post-footer
    - if user_profile.mturk
      script.
        $("#document_submit").submit(function(evt) {
          evt.preventDefault();
          evt.stopPropagation();

          // If the document was completed forget the rest and submit the mturk ajax request to move the turker
          $('#worker_submit').submit();
        });


    script.
        var $sections = $('div.paragraph p')
        var color_scale = d3.scale.category10();


        var handle_annotations = function(document_id, section_id, user_id, depth_index) {
          //-- Add the other community memebers annotations
          $.ajax({
            type: 'GET',
            url: '/document/'+ document_id +'/section/'+ section_id +'/user/'+ user_id +'/annotations/?format=json',
            cache: false,
            success: function(data) {
              // console.log(document_id, section_id, user_id, ' :: ', _.pluck(data, 'text'));

              var $el = $('div.paragraph#'+ section_id);
              _.each(data, function(annotation) {
                var $word = $el.find("p span[data-starti='"+ annotation.start +"']");
                if( $word.length == 1 ) {
                  var annotation_distance = annotation.text.length

                  // Find last word
                  var neighbor
                  var sameline;
                  var snakegrowth;
                  var next = n;
                  do {
                      neighbor = $word.next(),
                      word_length = neighbor.data('starti')-annotation.start-1;

                      snakegrowth += (neighbor.data('starti') - $word.data('starti') - 1)
                      var position = $word.position();
                  }
                  while (annotation_distance > snakegrowth);

                  var line = d3.select($el.find('svg')[0]).append("line")
                               .attr("x1", position.left )
                               .attr("y1", position.top + height + 2 + (depth_index * 4) )

                               .attr("x2", position.left + width - 4 )
                               .attr("y2", position.top + height + 2 + (depth_index * 4) )

                               .attr("stroke-width", 2)
                               .attr("stroke", function() { return color_scale(depth_index);} );


                  // console.log(position, width, height);
                }
              });
            },
          });
        };


        $.each($sections, function() {
          var section = $(this);
          var $words = section.find('span');
          var document_id = #{ doc.pk }
          var section_id = +section.parent().attr('id');

          //-- Add the current users recently submitted annotations
          $.each($words, function(w) {
            var word = $(this),
                next_word = word.next(),

                u_ann = word.data('uannid'),
                next_word_u_ann = next_word.data('uannid');


            if(u_ann != "None") { word.addClass('user_annotated'); }

            if( u_ann != "None" && u_ann != next_word_u_ann ) {
              word.html( word.html().trim() );
              word.addClass('neighbor_u');
            }
          });

          d3.select(section[0]).append("svg").attr("width", section.width()).attr("height", section.height());
          //-- Add the other community memebers annotations
          $.ajax({
            type: 'GET',
            url: '/document/'+ document_id +'/section/'+ section_id +'/results/top/?format=json',
            cache: false,
            async: false,
            success: function(data) {
              _.each(data, function(item, i) {
                handle_annotations(document_id, section_id, item.id, i);
              });
            },
          });


        });



