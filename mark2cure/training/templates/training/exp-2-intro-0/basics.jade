extends base

block header
  - with headerMessage='Introduction'
    include includes/header-anon

block content
  .container
    .row.foot-space-xl
      .col-xs-12
        h2.lead Welcome, new trainee, let's start with the basics...

    .row.head-space-xl
      #basics.col-xs-10.col-xs-offset-1.paragraph.entity_tag
        p Biomedical research literature is growing rapidly around the world, making it hard for researchers to acquire all new relevant information . By joining Mark2Cure I am helping to tag research articles so that they are readily searchable and can be linked to find new relationships, new discoveries, and hopefully new treatment strategies. I contribute to Mark2Cure because I am ready to help .

    #popover

    .row.head-space
      a(href='{% url "training:introduction" step_num=2 %}', id='next', disabled).btn.btn-primary.pull-right.disabled Next

block post-footer
    script.
      YPet.addInitializer(function(options) {
        var p = new Paragraph({'text': $('#basics').text().trim()});
        YPet.AnnotationTypes = new AnnotationTypeList([{name: 'Disease', color: '#d1f3ff'}]);
        YPet.addRegions({'basics': '#basics'});
        YPet['basics'].show(new WordCollectionView({collection: p.get('words')}))
      });
      YPet.start();

      var step_idx = 0;
      var $container = $('#popover');
      var opts = {'container': 'body', 'html': true, 'pos': {'top': 0, 'left': 0}};

      var step_function = function() {
        $container.popover('destroy');

        switch (step_idx) {
          case 0:
            opts['content'] = 'Highlight words by clicking on them. Highlight the word \“<span class="user_annotated">Biomedical</span>\”.';
            var $biomedical = $('p.paragraph span:nth(0)');

            opts['pos'] = $biomedical.offset();
            opts.pos.top = opts.pos.top - $('.popover').height() - 90;
            opts.pos.left = opts.pos.left - $('.popover').width() - 90;
            opts['placement'] = 'top';
            break;

          case 1:
            opts['content'] = 'Remove the highlight by clicking again. Un-highlight the word \“<span class="user_annotated">Biomedical</span>\”.';
            break;

          case 2:
            opts['content'] = 'Highlight blocks of text by holding down your mouse button until you reach the end of the text you wish to highlight. Highlight the phrase \“<span class="user_annotated">because I am ready to help</span>\”.';
            var $because = $('p.paragraph span:nth(56)');
            var $help = $('p.paragraph span:nth(61)');
            var same_line = $because.offset().top == $help.offset().top;

            opts['pos'] = $because.offset();

            if(same_line) {
              opts.pos.top = opts.pos.top + $because.height();
              opts.pos.left = opts.pos.left - ($('.popover').width()/2) + 30;
              opts['placement'] = 'bottom';
           } else {
              opts.pos.top = opts.pos.top - $('.popover').height() - 70;
              opts.pos.left = opts.pos.left - $because.width() - 30;
              opts['placement'] = 'top';
            }
            break;
          case 3:
            opts['content'] = 'Click Next to continue!';
            opts['placement'] = 'left';
            $next = $('#next');
            opts['pos'] = $next.offset();
            opts.pos.top = opts.pos.top - 5;
            opts.pos.left = opts.pos.left - 200;
            $next.attr('disabled', false);
            break;
        };

        $container.popover(opts);
        $container.popover('show');
        $container.on('shown.bs.popover', function (evt) {
          var $el = $('.popover');
          $el.animate({'top': opts.pos.top + 'px'});
          $el.animate({'left': opts.pos.left + 'px'});
        });
      };

      $('body').ready(function() { step_function(); });

      YPet['basics'].currentView.collection.parentDocument.get('annotations').on('add', function(model, collection) {
        var model_json = model.toJSON();

        /* Unselect wrong answers */
        if( !_.contains(['Biomedical', 'because I am ready to help'], model_json.text) ) {

          setTimeout(function() {
            var first_word = model.get('words').first();
            first_word.trigger('unclick');
          }, 50);

          collection.drawAnnotations(model);
        }

        if(model_json.text == 'Biomedical' && collection.length == 1) { step_idx = 1; step_function(); }
        if(model_json.text == 'because I am ready to help' && collection.length == 1) { step_idx = 3; step_function(); }
      });

      YPet['basics'].currentView.collection.parentDocument.get('annotations').on('remove', function(model, collection) {
        var model_json = model.toJSON();
        if(model_json.text == 'Biomedical' && collection.length == 0) { step_idx = 2; step_function(); }
      });
