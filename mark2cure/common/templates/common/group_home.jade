extends base

- load widget_tweaks
- load brabeion_tags
- load humanize
- load group

block header
  - with headerMessage=group.name
    include includes/header

block content

  .container
    - if messages
      - for message in messages
        - if 'safe' in message.tags
          .row
            .col-xs-10.col-xs-offset-1
              div(class='{{ message.tags }}').alert
                {{ message|safe }}

  .container
    .row
      - if group.description
        .col-md-10.col-md-offset-1.head-space
          p.lead #{group.description}

      .col-md-10.col-md-offset-1.head-space
        -with progress=group.percentage_complete
          - if progress
            h4.progress-label Community progress on this set:
            .progress
              div(role='progressbar', aria-valuenow='{{ progress }}', aria-valuemin='0', aria-valuemax='100', style='width: {{progress}}%;').progress-bar.active
                #{progress|floatformat:"2"}%

      - if request.user|has_group:"Comment Moderators"
        #chart.col-md-10.col-md-offset-1.head-space.text-center

      .col-md-10.col-md-offset-1
        #dashboard


block post-footer
    #fb-root

    script.
      var draw_dashboard = function(group, quests) {
        $('#group-'+ group.pk).html('');
        var canvas = d3.select('#group-'+ group.pk);

        var available_quests = _.filter(quests, function(item) { return item.enabled && !item.completed });
        var completion_size = _.map(available_quests, function(item) { return item.completions; });

        var completion_scale = d3.scale.linear()
          .domain([_.min(completion_size), _.max(completion_size)])
          .range(['#00CCFF', '#E64C66']);

        var template = _.template("
        <div class='row'>
          <div class='col-xs-12 text-center'>
            <% if(d.progress.completed) { %>
              <span class='glyphicon glyphicon-certificate muted' title='The community has completed this Quest.'></span>

            <% } else if (d.user.completed) { %>
              <span class='glyphicon glyphicon-ok' title='You have completed this Quest.'></span>

            <% } else if (!d.user.enabled) { %>
              <span class='glyphicon glyphicon-ban-circle muted' title='This quest is not enabled.'></span>

            <% } else { %>
              <a href='/quest/<%- d.id %>/' title='Click to start this quest!'><p style='font-size: 1.75em; line-height: 1.8em;'><%- d.name %></p></a>

            <% } %>
          </div>
        </div>

        <% if(d.user.enabled) { %>
          <div class='row'>
            <div class='col-xs-12' title='This quest is <%- Math.round(progress) %>% complete.'>
              <div class='progress'>
                <div class='progress-bar' role='progressbar' aria-valuenow='<%- progress %>' aria-valuemin='0' aria-valuemax='100' style='width: <%- progress %>%;'>
                  <span><%- d.progress.current %> Completions</span>
                </div>
              </div>
            </div>
          </div>
        <% } %>
          ");

        var attrs = {
          'class': 'quest col-xs-4 col-sm-2 col-md-1',
        };
        var styles = {
        };
        var quest = canvas.selectAll('.quest').remove();
        var quest = canvas.selectAll('.quest').data(quests);

        quest.enter().append('div')
          .attr(attrs)
          .style(styles)
          .html(function(d, i) {
            return template({
              'd': d,
              'progress': (d.progress.current/d.progress.required)*100,
              'completions_scale': completion_scale(d.completions),
            });
          });
        quest.transition().attr(attrs);
        quest.exit().remove();
      };


      var pk = #{group.pk};
      var template = _.template("
        <h3><%- name %></h3>
        <div id='group-<%- pk %>' class='row head-space paragraph-box'>
          <div class='col-xs-12 text-center'>
            <h2 class='quest-loading'>Loading...</h2>
          </div>
        </div>");
      $('#dashboard').append(template({'pk': pk}));

      $.ajax({
        'type': 'GET',
        'url': '/api/quest/'+ pk +'/',
        'success': function(data) {
          draw_dashboard({'pk': pk}, data);

          $('#dashboard .quest').click(function(evt) {
            var link = $(this).find('a');
            if(link.length) { location.href=link.attr('href'); }
          });

        }
      });

    script
        var margin = {top: 30, right: 40, bottom: 30, left: 50},
            width = 600 - margin.left - margin.right,
            height = 270 - margin.top - margin.bottom;

        var parseDate = d3.time.format("%Y-%m-%dT%H:%M:%SZ").parse;

        var x = d3.time.scale().range([0, width]);
        var y0 = d3.scale.linear().range([height, 0]);
        var y1 = d3.scale.linear().range([height, 0]);

        var xAxis = d3.svg.axis().scale(x)
          .orient("bottom").ticks(5);

        var yAxisLeft = d3.svg.axis().scale(y0)
          .orient("left").ticks(5);

        var yAxisRight = d3.svg.axis().scale(y1)
          .orient("right").ticks(5);

        var valueline = d3.svg.line()
          .x(function(d) { return x(d.date); })
          .y(function(d) { return y0(d.fscore); });

        var valueline2 = d3.svg.line()
          .x(function(d) { return x(d.date); })
          .y(function(d) { return y1(d.pairings); });

        var svg = d3.select("#chart")
          .append("svg")
            .attr("width", width + margin.left + margin.right)
            .attr("height", height + margin.top + margin.bottom)
          .append("g")
            .attr("transform", "translate(" + margin.left + "," + margin.top + ")");

        d3.json('/api/analysis/group/1/?format=json', function(error, data) {

          data.forEach(function(d) {
            d.date = parseDate(d.created);
            d.fscore = d['f-score'];
          });


          x.domain(d3.extent(data, function(d) { return d.date; }));
          y0.domain([0, 1]);
          y1.domain([0, _.max(_.pluck(data, 'pairings'))*1.2 ]);

          svg.append("path")
            .style("stroke", "#7F3CFF")
            .attr("d", valueline(data));

          svg.append("path")
            .style("stroke", "#E85997")
            .attr("d", valueline2(data));

          svg.append("g")
            .attr("class", "x axis")
            .attr("transform", "translate(0," + height + ")")
            .call(xAxis);

          svg.append("g")
            .attr("class", "y axis")
            .style("fill", "#7F3CFF")
            .call(yAxisLeft);

          svg.append("g")
            .attr("class", "y axis")
            .attr("transform", "translate(" + width + " ,0)")
            .style("fill", "#E85997")
            .call(yAxisRight);
        });



