extends base

- load widget_tweaks
- load comments


block content
  .container-fluid
    div(style="background: #f5f5f5;").row
      .col-xs-6.col-xs-offset-1
        #chart


block post-footer
  script.
    var g = {
      nodes: [],
      edges: []
    };

    s = new sigma({
      graph: g,
      container: 'graph-container',
      renderer: {
        container: document.getElementById('chart'),
        type: 'canvas'
      },
      settings: {
        minNodeSize: 8,
        maxNodeSize: 16
      }
    });

    sigma.parsers.json('/api/network/', s, function() {
      var i,
      nodes = s.graph.nodes(),
      len = nodes.length;

      for (i = 0; i < len; i++) {
        nodes[i].x = Math.random();
        nodes[i].y = Math.random();
        nodes[i].size = s.graph.degree(nodes[i].id);
        nodes[i].color = nodes[i].center ? '#333' : '#666';
      }

      s.refresh();
      s.startForceAtlas2();
    });

    var greyColor = '#666';
    s.draw();

    /*
    sigInst.bind('overnodes',function(event){
      var nodes = event.content;
      var neighbors = {};

      sigInst.iterEdges(function(e){
        if(nodes.indexOf(e.source)<0 && nodes.indexOf(e.target)<0){
          if(!e.attr['grey']){
            e.attr['true_color'] = e.color;
            e.color = greyColor;
            e.attr['grey'] = 1;
          }
        } else {
          e.color = e.attr['grey'] ? e.attr['true_color'] : e.color;
          e.attr['grey'] = 0;

          neighbors[e.source] = 1;
          neighbors[e.target] = 1;
        }
      }).iterNodes(function(n){
        if(!neighbors[n.id]){
          if(!n.attr['grey']){
            n.attr['true_color'] = n.color;
            n.color = greyColor;
            n.attr['grey'] = 1;
          }
        } else {
          n.color = n.attr['grey'] ? n.attr['true_color'] : n.color;
          n.attr['grey'] = 0;
        }
      }).draw(2,2,2);

    }).bind('outnodes',function(){
      sigInst.iterEdges(function(e){
        e.color = e.attr['grey'] ? e.attr['true_color'] : e.color;
        e.attr['grey'] = 0;
      }).iterNodes(function(n){
        n.color = n.attr['grey'] ? n.attr['true_color'] : n.color;
        n.attr['grey'] = 0;
      }).draw(2,2,2);
    });

    sigInst.draw();
    */
