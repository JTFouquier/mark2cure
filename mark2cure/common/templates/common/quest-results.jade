extends base

- load widget_tweaks
- load brabeion_tags

block header
  - with headerMessage=task.name
    include includes/header-quest

block content
  .container-fluid
    div(style="background: #f5f5f5;").row
      .col-xs-6.col-xs-offset-1
        p REVIEW ADMIN PAGE

    .row
      div(id="doc_{{document.pk}}", data-doc_pk="{{document.pk}}", data-pmid="{{document.document_id}}").container.document
        .paragraphs


block post-footer
  script.
    var task_id = "{{ task.pk }}";
    var self_data, passages, regions;

    YPet.addInitializer(function(options) {

      $.getJSON('/document/{{document.document_id}}.json', function( data ) {
        self_data = data;
        passages = data.collection.document.passage;
        regions = {};

        _.each(passages, function(passage, passage_idx) {
          var p_body = '<div id="'+ passage.infon[2]['#text'] +'" class="paragraph-box head-space"><p class="paragraph"></p></div></div>';
          $('.paragraphs').append(p_body);
          regions[''+passage_idx] = '#'+passage.infon[2]['#text'];
        });
        YPet.addRegions(regions);

        _.each(passages, function(passage, passage_idx) {
          var p = new Paragraph({'text': passage.text});
          YPet[''+passage_idx].show( new WordCollectionView({
            collection: p.get('words'),
            passage_json: passage,
            bioc_json: data
          }) );
        });

      });
    });
    YPet.start();

    var clicks = 0;
    $('#quest-submit').on('click', function(evt) {
      $(this).attr('disabled', true);
      if(clicks > 0) { return; }
      if(clicks == 0) { evt.preventDefault(); clicks++; }

      /*
       * AJAX submit all of the current Annotaitons
       */
      var counter = 0,
          ann_counter = 0;

      /* Iterate over each of the paragraphs or annotatable sections on the page */
      _.each(passages, function(passage, passage_idx) {

        var section_pk = +_.find(passage.infon, function(o){return o['@key']=='id';})['#text'],
            annotations = YPet[passage_idx].currentView.collection.parentDocument.get('annotations').toJSON(),
            url = '/document/{{task.pk}}/'+ section_pk +'/annotation/';
        ann_counter += annotations.length;

        var csrf = $('form').find('input[name="csrfmiddlewaretoken"]').val();

        /* Iterate over each of the annotations within that section */
        _.each(annotations, function(annotation) {
          $.ajax({
            type: 'POST',
            url: url,
            data: $.extend({'csrfmiddlewaretoken': csrf}, annotation),
            cache: false,
            async: false,
            success: function() { counter++; },
          });
        });
      });

      /* If they all got sent to the server, let's move on */
      if(counter === ann_counter) {
        /* Submit Task over ajax, then show correct page (new / gm / partner compare) */
        $('form').trigger('submit');

        $(this).text('Next');
        $(this).attr('disabled', false);

        /* Submit Feedback and show partner */
        $.ajax({
          url:'/document/{{task.pk}}/{{document.pk}}/results.json',
          dataType: 'json',
          success: function(data) {

            partner_data = data;

            window.scrollTo(0,0);
            var points = _.find(partner_data.collection.infon, function(o){return o['@key']=='points';})['#text'];
            var partner = _.find(partner_data.collection.infon, function(o){return o['@key']=='partner';})['#text'];
            var partner_level = _.find(partner_data.collection.infon, function(o){return o['@key']=='partner_level';})['#text'];
            var flatter = _.find(partner_data.collection.infon, function(o){return o['@key']=='flatter';})['#text'];

            $('#points').html(points);
            $('#partner-username').html(partner);
            $('#partner-level').html(partner_level);
            $('#flatter').html(flatter);
            $('#partner-results').slideDown(function() {
              update_score();

              /* Show underlines */
              var passages = data.collection.document.passage;
              _.each(passages, function(passage, passage_idx) {
                YPet[passage_idx].currentView.drawBioC(passage, true);
              });
            });

          },
          error: function(error_res) {
            console.log(error_res.responseText);
            _.each(passages, function(passage, passage_idx) {
              YPet[passage_idx].currentView.drawBioC(null, true);
            });
            window.scrollTo(0,0);
            $('#new-alert-congrats').slideDown()
          }
        });

      } else {
        alert('There was a problem submitting this document. Please try another.');
      }
    });

